type Query {
    refreshToken(refreshToken: String!): AuthenticationResponse
}

type Mutation{
    signUp(email: String!, firstName: String!, lastName: String!, password: String!): AuthenticationResponse
    signIn(email: String!, password: String!): AuthenticationResponse
    authenticateWithGoogle(tokenId: String!): AuthenticationResponse
    saveSelectRealWords(questionRequest: QuestionRequest!): SimpleResponse
}

type AuthenticationResponse {
    email: String
    token: String!
    refreshToken: String!
    role: Role
}

enum Role {
    ADMIN,
    USER
}

type SimpleResponse {
    message: String
    status: String
}

input QuestionRequest {
    testId: ID!
    title : String!
    duration : Int!
    optionRequests : [OptionRequest]!
}

input OptionRequest {
    value : String!
    isTrue : Boolean!
}